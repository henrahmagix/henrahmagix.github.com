require 'rouge'

def pad(s, size, char)
  s[0...size].rjust(size, char);
end

def adjust(v, avg)
  half = 255/2.0
  contrast = (avg - half).abs / half
  adjustment = 255.0 * contrast

  should_lighten = avg <= half
  should_lighten ? [255.0, v + adjustment].min : [0.0, v - adjustment].max
end

css_light = Rouge::Theme.find('github').render(scope: 'pre.highlight')
css_dark = css_light.gsub(/#\w{3,6}/) do |hex|
  hex = hex[1..-1]
  if hex.length == 3
    r = (hex[0] + '' + hex[0]).to_i(16)
    g = (hex[1] + '' + hex[1]).to_i(16)
    b = (hex[2] + '' + hex[2]).to_i(16)
  else
    r = (hex[0] + '' + hex[1]).to_i(16)
    g = (hex[2] + '' + hex[3]).to_i(16)
    b = (hex[4] + '' + hex[5]).to_i(16)
  end
  avg = (r+g+b)/3
  r2 = adjust(r, avg)
  g2 = adjust(g, avg)
  b2 = adjust(b, avg)

  r2 = pad(r2.to_i.to_s(16), 2, '0')
  g2 = pad(g2.to_i.to_s(16), 2, '0')
  b2 = pad(b2.to_i.to_s(16), 2, '0')
  '#' + r2 + g2 + b2
end

open('css/code.css', 'w') do |f|
  f.puts "/* Generated by `bundle exec ruby #{__FILE__}` */"
  f.puts css_light
  f.puts '@media (prefers-color-scheme: dark) {'
  f.puts css_dark
  f.puts '}'
end
