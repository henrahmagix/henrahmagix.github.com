require 'rouge'

def lighten(v)
  v2 = v * 1.5 + (255 - v) / 1.6
  [255, v2].min
end
def darken(v)
  v2 = v * 0.125 - (255 - v) / 1.6
  [0, v2].max
end
def pad(s, size, char)
  s[0...size].rjust(size, char);
end

css_light = Rouge::Theme.find('github').render(scope: 'pre.highlight')
css_dark = css_light.gsub(/#\w{3,6}/) do |hex|
  hex = hex[1..-1]
  if hex.length == 3
    r = (hex[0] + '' + hex[0]).to_i(16)
    g = (hex[1] + '' + hex[1]).to_i(16)
    b = (hex[2] + '' + hex[2]).to_i(16)
  else
    r = (hex[0] + '' + hex[1]).to_i(16)
    g = (hex[2] + '' + hex[3]).to_i(16)
    b = (hex[4] + '' + hex[5]).to_i(16)
  end
  should_lighten = (r+g+b)/3 <= 127
  r2 = should_lighten ? lighten(r) : darken(r)
  g2 = should_lighten ? lighten(g) : darken(g)
  b2 = should_lighten ? lighten(b) : darken(b)

  r2 = pad(r2.to_i.to_s(16), 2, '0')
  g2 = pad(g2.to_i.to_s(16), 2, '0')
  b2 = pad(b2.to_i.to_s(16), 2, '0')
  '#' + r2 + g2 + b2
end

open('css/code.css', 'w') do |f|
  f.puts "/* Generated by `bundle exec ruby #{__FILE__}` */"
  f.puts css_light
  f.puts '@media (prefers-color-scheme: dark) {'
  f.puts css_dark
  f.puts '}'
end
